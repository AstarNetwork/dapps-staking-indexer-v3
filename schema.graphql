type StakingEvent @entity {
  id: ID!
  userAddress: String! @index
  transaction: UserTransactionType!
  contractAddress: String
  amount: BigInt!
  timestamp: BigInt! @index
  blockNumber: BigInt!
}

type GroupedStakingEvent @entity {
  id: ID!
  transaction: UserTransactionType!
  amount: BigInt!
  timestamp: BigInt! @index
}

enum UserTransactionType {
  BondAndStake,
  UnbondAndUnstake,
  Withdraw,
  WithdrawFromUnregistered,
  NominationTransfer
}

enum DappState {
  Registered,
  Unregistered,
}

type Dapp @entity {
  # dApp address
  id: ID!
  # dApp id
  dappId: Int!
  owner: String!
  # dApp reward received address
  beneficiary: String
  state: DappState!
  registeredAt: BigInt!
  registrationBlockNumber: Int!
  unregisteredAt: BigInt
  unregistrationBlockNumber: Int
  stakersCount: Int!
}

type DappAggregatedDaily @entity {
  id: ID!
  dappAddress: String!
  stakersCount: Int!
}

type TvlAggregatedDaily @entity {
  id: ID!
  tvl: BigInt!
}

type Stake @entity {
  id: ID!
  dappAddress: String!
  stakerAddress: String!
  amount: BigInt!
  timestamp: BigInt!
  blockNumber: Int!
}
